{
  "swagger" : "2.0",
  "info" : {
    "description" : "The Pega API provides a set of built-in REST services for Pega 7 applications. All APIs require authentication. Provide the credentials for a Pega operator in the Authorization header for each request. Pega recommends accessing APIs using TLS 1.2.",
    "version" : "1.0.1",
    "title" : "Pega API"
  },
  "host" : "pega2.zanbar.uk:8080",
  "basePath" : "/prweb/api/v1",
  "paths" : {
    "/assignments" : {
      "get" : {
        "tags" : [ "assignments" ],
        "summary" : "Get assignments",
        "description" : "Returns the authenticated user's list of assignments.",
        "operationId" : "getAssignments",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AssignmentsResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/assignments/{ID}" : {
      "get" : {
        "tags" : [ "assignments" ],
        "summary" : "Get assignment details",
        "description" : "Returns a single assignment's details given its ID (or) Returns the next available assignment for the requestor if 'next' is passed.",
        "operationId" : "getAssignmentDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ID",
          "in" : "path",
          "description" : "Assignment ID/'next'",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AssignmentResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "No assignment found or available",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "assignments" ],
        "summary" : "Perform assignment action",
        "description" : "Performs an action on an assignment given its ID and an optional content in the request body.",
        "operationId" : "performAssignmentAction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ID",
          "in" : "path",
          "description" : "Assignment ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actionID",
          "in" : "query",
          "description" : "Assignment action to perform",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "requestBody",
          "description" : "Content should mirror the clipboard structure",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignmentActionRequest"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/authenticate" : {
      "get" : {
        "tags" : [ "authenticate" ],
        "summary" : "Verify user credentials",
        "description" : "Verifies if the credentials provided in Authorization header using *Basic* authentication are valid or not.",
        "operationId" : "authenticate",
        "parameters" : [ ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cases" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Get cases",
        "description" : "Gets all cases that the authenticated user has created in the default work pool.",
        "operationId" : "getCases",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CasesResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Create a new case",
        "description" : "Creates a new case of the given type. \nThe HTTP response header *Location* contains the URI of the newly created case.",
        "operationId" : "createCase",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "requestBody",
          "description" : "Input parameters (caseTypeID, processID, parentCaseID, content) that are needed to create a case",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateCaseRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/CreateCaseResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "Contains the URI of the newly created case"
              },
              "ETag" : {
                "type" : "string",
                "description" : "Value of the entity tag that must be passed as If-Match header in the request to update case API"
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cases/{ID}" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Get case details",
        "description" : "Gets the details of a case given its ID.",
        "operationId" : "getCaseDetails",
        "parameters" : [ {
          "name" : "ID",
          "in" : "path",
          "description" : "Case ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CaseResponse"
            },
            "headers" : {
              "ETag" : {
                "type" : "string",
                "description" : "Value of the entity tag that must be passed as If-Match header in the request to update case API"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "cases" ],
        "summary" : "Update a case",
        "description" : "Performs an action given a case ID and an optional content in the request body.",
        "operationId" : "updateCase",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ID",
          "in" : "path",
          "description" : "Case ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actionID",
          "in" : "query",
          "description" : "Local action or a stage local action to perform",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "Value of the entity tag that is received as ETag header in responses to create case and get case details APIs",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "requestBody",
          "description" : "Content should mirror the clipboard structure",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateCaseRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "headers" : {
              "ETag" : {
                "type" : "string",
                "description" : "Value of the entity tag that must be passed as If-Match header in the request to update case API"
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "412" : {
            "description" : "Precondition failed",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/casetypes" : {
      "get" : {
        "tags" : [ "casetypes" ],
        "summary" : "Get case types",
        "description" : "Gets the case types from the authenticated user's application.",
        "operationId" : "getCaseTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CaseTypesResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data/{ID}" : {
      "get" : {
        "tags" : [ "data" ],
        "summary" : "Get data page contents",
        "description" : "Gets the contents of a data page given its name and parameters.\nParameters are passed in as query string parameters. For example, if you have a data page called D_Customer with parameters \"ID\" and \"Company\" you could access the data page with the URL https://myco.org/prweb/api/v1/data/D_Customer?ID=1&Company=MyCo.\n\"Try it out\" note: When testing with \"try it out\" below you cannot enter values for data page parameters to use as part of the test. This means only data pages without required parameters can be tested below.",
        "operationId" : "getDataPage",
        "parameters" : [ {
          "name" : "ID",
          "in" : "path",
          "description" : "Data page identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data/{ID}/metadata" : {
      "get" : {
        "tags" : [ "data" ],
        "summary" : "Get data page metadata",
        "description" : "Gets the metadata of a data page given its name.",
        "operationId" : "getDataPageMetadata",
        "parameters" : [ {
          "name" : "ID",
          "in" : "path",
          "description" : "Data page identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DataPageMetadata"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/docs" : {
      "get" : {
        "tags" : [ "docs" ],
        "summary" : "Get the complete documentation for Pega API",
        "description" : "Gets the complete documentation for Pega API.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/users/logout" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Terminates all existing sessions in all nodes of the cluster for the given set of users",
        "description" : "Terminates all existing sessions in all nodes of the cluster for the given set of users",
        "operationId" : "logout",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "requestBody",
          "description" : "Input parameters (Message and userids for the operators whose session needs to be terminated)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserSessionTerminationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request Received Succesfully",
            "schema" : {
              "$ref" : "#/definitions/UserSessionTerminationResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "ErrorResponse" : {
      "properties" : {
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API"
        },
        "errors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Error"
          }
        }
      }
    },
    "Error" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "Pega_API_XXX"
        },
        "message" : {
          "type" : "string",
          "example" : "<>"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-Error"
        }
      }
    },
    "CasesResponse" : {
      "properties" : {
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement"
        },
        "cases" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Case"
          }
        }
      }
    },
    "Case" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "MYCO-PAC-WORK E-269"
        },
        "parentCaseID" : {
          "type" : "string",
          "example" : "MyCo-PAC-Work"
        },
        "caseTypeID" : {
          "type" : "string",
          "example" : "MyCo-PAC-Work-ExpenseReport"
        },
        "name" : {
          "type" : "string",
          "example" : "ExpenseReport"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Case"
        },
        "stage" : {
          "type" : "string",
          "example" : "Stage 1"
        },
        "status" : {
          "type" : "string",
          "example" : "New"
        },
        "urgency" : {
          "type" : "string",
          "example" : "90"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "createdBy" : {
          "type" : "string",
          "example" : "John Doe"
        },
        "lastUpdateTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T20:00:44.443Z"
        },
        "lastUpdatedBy" : {
          "type" : "string",
          "example" : "manager@pmf.com"
        }
      }
    },
    "CaseTypesResponse" : {
      "properties" : {
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement"
        },
        "caseTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CaseType"
          }
        }
      }
    },
    "AssignmentsResponse" : {
      "properties" : {
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement"
        },
        "assignments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Assignment"
          }
        }
      }
    },
    "Assignment" : {
      "properties" : {
        "caseID" : {
          "type" : "string",
          "example" : "MYCO-PAC-WORK E-278"
        },
        "executedDeadlineTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "executedGoalTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T08:00:44.443Z"
        },
        "ID" : {
          "type" : "string",
          "example" : "ASSIGN-WORKLIST MYCO-PAC-WORK E-278!PZDEFAULTSTAGESTEP"
        },
        "name" : {
          "type" : "string",
          "example" : "Default step"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Assignment"
        },
        "routedTo" : {
          "type" : "string",
          "example" : "user1"
        },
        "scheduledDeadlineTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "scheduledGoalTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "type" : {
          "type" : "string",
          "example" : "Worklist"
        },
        "urgency" : {
          "type" : "string",
          "example" : "10"
        },
        "instructions" : {
          "type" : "string",
          "example" : "Default stage"
        }
      }
    },
    "AssignmentActionRequest" : {
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/Content"
        }
      }
    },
    "Content" : {
      "type" : "object"
    },
    "UserSessionTerminationRequest" : {
      "properties" : {
        "Message" : {
          "type" : "string",
          "example" : "Security profile changed"
        },
        "User" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "user1"
          }
        }
      }
    },
    "UserSessionTerminationResponse" : {
      "properties" : {
        "pyStatusMessage" : {
          "type" : "string"
        },
        "pyStatusValue" : {
          "type" : "string"
        }
      }
    },
    "CreateCaseRequest" : {
      "required" : [ "caseTypeID" ],
      "properties" : {
        "caseTypeID" : {
          "type" : "string",
          "example" : "MyCo-PAC-Work-ExpenseReport"
        },
        "processID" : {
          "type" : "string",
          "example" : "pyStartCase"
        },
        "parentCaseID" : {
          "type" : "string",
          "example" : ""
        },
        "content" : {
          "$ref" : "#/definitions/Content"
        }
      }
    },
    "CreateCaseResponse" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "MYCO-PAC-WORK E-107"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Case"
        }
      }
    },
    "UpdateCaseRequest" : {
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/Content"
        }
      }
    },
    "AssignmentResponse" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "ASSIGN-WORKLIST MYCO-PAC-WORK E-110!PYSTARTCASE"
        },
        "caseID" : {
          "type" : "string",
          "example" : "MYCO-PAC-WORK E-110"
        },
        "name" : {
          "type" : "string",
          "example" : "ExpenseReport"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Assignment"
        },
        "type" : {
          "type" : "string",
          "example" : "Worklist"
        },
        "routedTo" : {
          "type" : "string",
          "example" : "user1"
        },
        "instructions" : {
          "type" : "string",
          "example" : "Default step"
        },
        "scheduledGoalTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "executedGoalTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "scheduledDeadlineTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "executedDeadlineTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "urgency" : {
          "type" : "string",
          "example" : "10"
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AssignmentAction"
          }
        }
      }
    },
    "AssignmentAction" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "AddExpense"
        },
        "name" : {
          "type" : "string",
          "example" : "Add expense"
        },
        "type" : {
          "type" : "string",
          "example" : "Assignment"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Action"
        }
      }
    },
    "CaseResponse" : {
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "New"
        },
        "caseTypeID" : {
          "type" : "string",
          "example" : "MyCo-PAC-Work-Timesheet"
        },
        "name" : {
          "type" : "string",
          "example" : "Timesheet"
        },
        "ID" : {
          "type" : "string",
          "example" : "MYCO-PAC-WORK T-240"
        },
        "parentCaseID" : {
          "type" : "string",
          "example" : "MYCO-PAC-WORK T-200"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Case"
        },
        "stage" : {
          "type" : "string",
          "example" : "PRIM1"
        },
        "urgency" : {
          "type" : "string",
          "example" : "15"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "createdBy" : {
          "type" : "string",
          "example" : "administrator@pmf.com"
        },
        "lastUpdateTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T22:00:44.443Z"
        },
        "lastUpdatedBy" : {
          "type" : "string",
          "example" : "manager@pmf.com"
        },
        "owner" : {
          "type" : "string",
          "example" : "user@pmf.com"
        },
        "content" : {
          "$ref" : "#/definitions/Content"
        },
        "stages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Stage"
          }
        },
        "SLA" : {
          "$ref" : "#/definitions/SLA"
        },
        "childCases" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChildCase"
          }
        },
        "childCaseTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CaseType"
          }
        },
        "assignments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CaseAssignment"
          }
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Action"
          }
        }
      }
    },
    "Stage" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "PRIM1"
        },
        "name" : {
          "type" : "string",
          "example" : "Stage 1"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Stage"
        }
      }
    },
    "Action" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "AddExpense"
        },
        "name" : {
          "type" : "string",
          "example" : "Add expense"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Action"
        }
      }
    },
    "ChildCase" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "MYCO-PAC-WORK S-240"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Case"
        }
      }
    },
    "CaseType" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "MyCo-PAC-Work-ExpenseReport"
        },
        "name" : {
          "type" : "string",
          "example" : "Expense Report"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-CaseType"
        },
        "startingProcesses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StartingProcess"
          }
        }
      }
    },
    "StartingProcess" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "pyStartCase"
        },
        "name" : {
          "type" : "string",
          "example" : "Add Expense"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Process"
        }
      }
    },
    "SLA" : {
      "properties" : {
        "stageSLAGoal" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "stageSLADeadline" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T18:00:44.443Z"
        },
        "overallSLAGoal" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "overallSLADeadline" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T18:00:44.443Z"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-SLA"
        }
      }
    },
    "CaseAssignment" : {
      "properties" : {
        "ID" : {
          "type" : "string",
          "example" : "ASSIGN-WORKLIST MYCO-PAC-WORK E-110!PYSTARTCASE"
        },
        "name" : {
          "type" : "string",
          "example" : "ExpenseReport"
        },
        "type" : {
          "type" : "string",
          "example" : "Worklist"
        },
        "pxObjClass" : {
          "type" : "string",
          "example" : "Pega-API-CaseManagement-Assignment"
        },
        "routedTo" : {
          "type" : "string",
          "example" : "user1"
        },
        "instructions" : {
          "type" : "string",
          "example" : "10"
        },
        "scheduledGoalTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "executedGoalTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "scheduledDeadlineTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "executedDeadlineTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2015-02-05T13:00:44.443Z"
        },
        "urgency" : {
          "type" : "string",
          "example" : "10"
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Action"
          }
        }
      }
    },
    "DataPageMetadata" : {
      "properties" : {
        "dataTypeID" : {
          "type" : "string",
          "example" : "Data-Rule-AppMetadata"
        },
        "description" : {
          "type" : "string",
          "example" : "This page contains data explorer information to be displayed"
        },
        "usage" : {
          "type" : "string",
          "example" : "Data explorer information"
        },
        "ID" : {
          "type" : "string",
          "example" : "D_pyDataExplorer"
        },
        "name" : {
          "type" : "string",
          "example" : "D_pyDataExplorer"
        },
        "structure" : {
          "type" : "string",
          "example" : "list"
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Parameter"
          }
        }
      }
    },
    "Parameter" : {
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "AppName"
        },
        "description" : {
          "type" : "string",
          "example" : "Application name"
        },
        "dataType" : {
          "type" : "string",
          "example" : "STRING"
        },
        "required" : {
          "type" : "string",
          "example" : "false"
        },
        "defaultValue" : {
          "type" : "string",
          "example" : "MyApp:07.10"
        }
      }
    }
  }
}